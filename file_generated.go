// This file was autogenerated using go run mkcode.go -- file.go
// DO NOT EDIT.

package ntdll

import "unsafe"

type FileInformationClass uint32

const (
	FileDirectoryInformation                FileInformationClass = 1
	FileFullDirectoryInformation                                 = 2
	FileBothDirectoryInformation                                 = 3
	FileBasicInformation                                         = 4
	FileStandardInformation                                      = 5
	FileInternalInformation                                      = 6
	FileEaInformation                                            = 7
	FileAccessInformation                                        = 8
	FileNameInformation                                          = 9
	FileRenameInformation                                        = 10
	FileLinkInformation                                          = 11
	FileNamesInformation                                         = 12
	FileDispositionInformation                                   = 13
	FilePositionInformation                                      = 14
	FileFullEaInformation                                        = 15
	FileModeInformation                                          = 16
	FileAlignmentInformation                                     = 17
	FileAllInformation                                           = 18
	FileAllocationInformation                                    = 19
	FileEndOfFileInformation                                     = 20
	FileAlternateNameInformation                                 = 21
	FileStreamInformation                                        = 22
	FilePipeInformation                                          = 23
	FilePipeLocalInformation                                     = 24
	FilePipeRemoteInformation                                    = 25
	FileMailslotQueryInformation                                 = 26
	FileMailslotSetInformation                                   = 27
	FileCompressionInformation                                   = 28
	FileObjectIdInformation                                      = 29
	FileCompletionInformation                                    = 30
	FileMoveClusterInformation                                   = 31
	FileQuotaInformation                                         = 32
	FileReparsePointInformation                                  = 33
	FileNetworkOpenInformation                                   = 34
	FileAttributeTagInformation                                  = 35
	FileTrackingInformation                                      = 36
	FileIdBothDirectoryInformation                               = 37
	FileIdFullDirectoryInformation                               = 38
	FileValidDataLengthInformation                               = 39
	FileShortNameInformation                                     = 40
	FileIoCompletionNotificationInformation                      = 41
	FileIoStatusBlockRangeInformation                            = 42
	FileIoPriorityHintInformation                                = 43
	FileSfioReserveInformation                                   = 44
	FileSfioVolumeInformation                                    = 45
	FileHardLinkInformation                                      = 46
	FileProcessIdsUsingFileInformation                           = 47
	FileNormalizedNameInformation                                = 48
	FileNetworkPhysicalNameInformation                           = 49
	FileIdGlobalTxDirectoryInformation                           = 50
	FileIsRemoteDeviceInformation                                = 51
	FileUnusedInformation                                        = 52
	FileNumaNodeInformation                                      = 53
	FileStandardLinkInformation                                  = 54
	FileRemoteProtocolInformation                                = 55
	FileRenameInformationBypassAccessCheck                       = 56
	FileLinkInformationBypassAccessCheck                         = 57
	FileVolumeNameInformation                                    = 58
	FileIdInformation                                            = 59
	FileIdExtdDirectoryInformation                               = 60
	FileReplaceCompletionInformation                             = 61
	FileHardLinkFullIdInformation                                = 62
	FileIdExtdBothDirectoryInformation                           = 63
	FileMaximumInformation                                       = 64
)

var (
	procNtCreateFile           = modntdll.NewProc("NtCreateFile")
	procNtOpenFile             = modntdll.NewProc("NtOpenFile")
	procNtQueryInformationFile = modntdll.NewProc("NtQueryInformationFile")
	procNtReadFile             = modntdll.NewProc("NtReadFile")
	procNtSetInformationFile2  = modntdll.NewProc("NtSetInformationFile2")
	procNtWriteFile            = modntdll.NewProc("NtWriteFile")
)

type FileDirectoryInformationT struct {
	NextEntryOffset uint32
	FileIndex       uint32
	CreationTime    int64
	LastAccessTime  int64
	LastWriteTime   int64
	ChangeTime      int64
	EndOfFile       int64
	AllocationSize  int64
	FileAttributes  uint32
	FileNameLength  uint32
	FileName        [1]uint16
}

type FileFullDirInformationT struct {
	NextEntryOffset uint32
	FileIndex       uint32
	CreationTime    int64
	LastAccessTime  int64
	LastWriteTime   int64
	ChangeTime      int64
	EndOfFile       int64
	AllocationSize  int64
	FileAttributes  uint32
	FileNameLength  uint32
	EaSize          uint32
	FileName        [1]uint16
}

type FileBothDirInformationT struct {
	NextEntryOffset uint32
	FileIndex       uint32
	CreationTime    int64
	LastAccessTime  int64
	LastWriteTime   int64
	ChangeTime      int64
	EndOfFile       int64
	AllocationSize  int64
	FileAttributes  uint32
	FileNameLength  uint32
	EaSize          uint32
	ShortNameLength byte
	ShortName       [12]uint16
	FileName        [1]uint16
}

type FileBasicInformationT struct {
	CreationTime   int64
	LastAccessTime int64
	LastWriteTime  int64
	ChangeTime     int64
	FileAttributes uint32
}

type FileStandardInformationT struct {
	AllocationSize int64
	EndOfFile      int64
	NumberOfLinks  uint32
	DeletePending  bool
	Directory      bool
}

type FileInternalInformationT struct {
	IndexNumber int64
}

type FileEaInformationT struct {
	EaSize uint32
}

type FileAccessInformationT struct {
	AccessFlags AccessMask
}

type FileNameInformationT struct {
	FileNameLength uint32
	FileName       [1]uint16
}

type FileRenameInformationT struct {
	ReplaceIfExists bool
	RootDirectory   Handle
	FileNameLength  uint32
	FileName        [1]uint16
}

type FileLinkInformationT struct {
	ReplaceIfExists bool
	RootDirectory   Handle
	FileNameLength  uint32
	FileName        [1]uint16
}

type FileNamesInformationT struct {
	NextEntryOffset uint32
	FileIndex       uint32
	FileNameLength  uint32
	FileName        [1]uint16
}

type FileDispositionInformationT struct {
	DeleteFile bool
}

type FilePositionInformationT struct {
	CurrentByteOffset int64
}

type FileFullEaInformationT struct {
	NextEntryOffset uint32
	Flags           byte
	EaNameLength    byte
	EaValueLength   uint16
	EaName          [1]byte
}

type FileModeInformationT struct {
	Mode uint32
}

type FileAlignmentInformationT struct {
	AlignmentRequirement uint32
}

type FileAllInformationT struct {
	BasicInformation     FileBasicInformationT
	StandardInformation  FileStandardInformationT
	InternalInformation  FileInternalInformationT
	EaInformation        FileEaInformationT
	AccessInformation    FileAccessInformationT
	PositionInformation  FilePositionInformationT
	ModeInformation      FileModeInformationT
	AlignmentInformation FileAlignmentInformationT
	NameInformation      FileNameInformationT
}

type FileAllocationInformationT struct {
	AllocationSize int64
}

type FileEndOfFileInformationT struct {
	EndOfFile int64
}

type FileStreamInformationT struct {
	NextEntryOffset      uint32
	StreamNameLength     uint32
	StreamSize           int64
	StreamAllocationSize int64
	StreamName           [1]uint16
}

type FilePipeInformationT struct {
	ReadMode       uint32
	CompletionMode uint32
}

type FilePipeLocalInformationT struct {
	NamedPipeType          uint32
	NamedPipeConfiguration uint32
	MaximumInstances       uint32
	CurrentInstances       uint32
	InboundQuota           uint32
	ReadDataAvailable      uint32
	OutboundQuota          uint32
	WriteQuotaAvailable    uint32
	NamedPipeState         uint32
	NamedPipeEnd           uint32
}

type FilePipeRemoteInformationT struct {
	CollectDataTime        int64
	MaximumCollectionCount uint32
}

type FileMailslotQueryInformationT struct {
	MaximumMessageSize uint32
	MailslotQuota      uint32
	NextMessageSize    uint32
	MessagesAvailable  uint32
	ReadTimeout        int64
}

type FileMailslotSetInformationT struct {
	ReadTimeout *int64
}

type FileCompressionInformationT struct {
	CompressedFileSize   int64
	CompressionFormat    uint16
	CompressionUnitShift byte
	ChunkShift           byte
	ClusterShift         byte
	Reserved             [3]byte
}

type FileQuotaInformationT struct {
	NextEntryOffset uint32
	SidLength       uint32
	ChangeTime      int64
	QuotaUsed       int64
	QuotaThreshold  int64
	QuotaLimit      int64
	Sid             Sid
}

type FileReparsePointInformationT struct {
	FileReference int64
	Tag           uint32
}

type FileNetworkOpenInformationT struct {
	CreationTime   int64
	LastAccessTime int64
	LastWriteTime  int64
	ChangeTime     int64
	AllocationSize int64
	EndOfFile      int64
	FileAttributes uint32
}

type FileAttributeTagInformationT struct {
	FileAttributes uint32
	ReparseTag     uint32
}

type FileIdBothDirInformationT struct {
	NextEntryOffset uint32
	FileIndex       uint32
	CreationTime    int64
	LastAccessTime  int64
	LastWriteTime   int64
	ChangeTime      int64
	EndOfFile       int64
	AllocationSize  int64
	FileAttributes  uint32
	FileNameLength  uint32
	EaSize          uint32
	ShortNameLength byte
	ShortName       [12]uint16
	FileId          int64
	FileName        [1]uint16
}

type FileIdFullDirInformationT struct {
	NextEntryOffset uint32
	FileIndex       uint32
	CreationTime    int64
	LastAccessTime  int64
	LastWriteTime   int64
	ChangeTime      int64
	EndOfFile       int64
	AllocationSize  int64
	FileAttributes  uint32
	FileNameLength  uint32
	EaSize          uint32
	FileId          int64
	FileName        [1]uint16
}

type FileValidDataLengthInformationT struct {
	ValidDataLength int64
}

type FileIoPriorityHintInformationT struct {
	PriorityHint IoPriorityHint
}

type FileLinkEntryInformationT struct {
	NextEntryOffset uint32
	ParentFileId    int64
	FileNameLength  uint32
	FileName        uint16
}

type FileLinksInformationT struct {
	BytesNeeded     uint32
	EntriesReturned uint32
	Entry           FileLinkEntryInformationT
}

type FileNetworkPhysicalNameInformationT struct {
	FileNameLength uint32
	FileName       [1]uint16
}

type FileIdGlobalTxDirInformationT struct {
	NextEntryOffset      uint32
	FileIndex            uint32
	CreationTime         int64
	LastAccessTime       int64
	LastWriteTime        int64
	ChangeTime           int64
	EndOfFile            int64
	AllocationSize       int64
	FileAttributes       uint32
	FileNameLength       uint32
	FileId               int64
	LockingTransactionId Guid
	TxInfoFlags          uint32
	FileName             [1]uint16
}

type FileCompletionInformationT struct {
	Port Handle
	Key  *byte
}

func NtCreateFile(FileHandle *Handle, DesiredAccess AccessMask, ObjectAttributes *ObjectAttributes, IoStatusBlock *IoStatusBlock, AllocationSize *int64, FileAttributes uint32, ShareAccess uint32, CreateDisposition uint32, CreateOptions uint32, EaBuffer *byte, EaLength uint32) NtStatus {
	r0, _, _ := procNtCreateFile.Call(uintptr(unsafe.Pointer(FileHandle)), uintptr(DesiredAccess), uintptr(unsafe.Pointer(ObjectAttributes)), uintptr(unsafe.Pointer(IoStatusBlock)), uintptr(unsafe.Pointer(AllocationSize)), uintptr(FileAttributes), uintptr(ShareAccess), uintptr(CreateDisposition), uintptr(CreateOptions), uintptr(unsafe.Pointer(EaBuffer)), uintptr(EaLength))
	return NtStatus(r0)
}

func NtOpenFile(FileHandle *Handle, DesiredAccess AccessMask, ObjectAttributes *ObjectAttributes, IoStatusBlock *IoStatusBlock, ShareAccess uint32, OpenOptions uint32) NtStatus {
	r0, _, _ := procNtOpenFile.Call(uintptr(unsafe.Pointer(FileHandle)), uintptr(DesiredAccess), uintptr(unsafe.Pointer(ObjectAttributes)), uintptr(unsafe.Pointer(IoStatusBlock)), uintptr(ShareAccess), uintptr(OpenOptions))
	return NtStatus(r0)
}

func NtQueryInformationFile(FileHandle Handle, IoStatusBlock *IoStatusBlock, FileInformation *byte, Length uint32, FileInformationClass FileInformationClass) NtStatus {
	r0, _, _ := procNtQueryInformationFile.Call(uintptr(FileHandle), uintptr(unsafe.Pointer(IoStatusBlock)), uintptr(unsafe.Pointer(FileInformation)), uintptr(Length), uintptr(FileInformationClass))
	return NtStatus(r0)
}

func NtReadFile(FileHandle Handle, Event Handle, ApcRoutine *IoApcRoutine, ApcContext *byte, IoStatusBlock *IoStatusBlock, Buffer *byte, Length uint32, ByteOffset *int64, Key *uint32) NtStatus {
	r0, _, _ := procNtReadFile.Call(uintptr(FileHandle), uintptr(Event), uintptr(unsafe.Pointer(ApcRoutine)), uintptr(unsafe.Pointer(ApcContext)), uintptr(unsafe.Pointer(IoStatusBlock)), uintptr(unsafe.Pointer(Buffer)), uintptr(Length), uintptr(unsafe.Pointer(ByteOffset)), uintptr(unsafe.Pointer(Key)))
	return NtStatus(r0)
}

func NtSetInformationFile2(FileHandle Handle, IoStatusBlock *IoStatusBlock, FileInformation *byte, Length uint32, FileInformationClass FileInformationClass) NtStatus {
	r0, _, _ := procNtSetInformationFile2.Call(uintptr(FileHandle), uintptr(unsafe.Pointer(IoStatusBlock)), uintptr(unsafe.Pointer(FileInformation)), uintptr(Length), uintptr(FileInformationClass))
	return NtStatus(r0)
}

func NtWriteFile(FileHandle Handle, Event Handle, ApcRoutine *IoApcRoutine, ApcContext *byte, IoStatusBlock *IoStatusBlock, Buffer *byte, Length uint32, ByteOffset *int64, Key *uint32) NtStatus {
	r0, _, _ := procNtWriteFile.Call(uintptr(FileHandle), uintptr(Event), uintptr(unsafe.Pointer(ApcRoutine)), uintptr(unsafe.Pointer(ApcContext)), uintptr(unsafe.Pointer(IoStatusBlock)), uintptr(unsafe.Pointer(Buffer)), uintptr(Length), uintptr(unsafe.Pointer(ByteOffset)), uintptr(unsafe.Pointer(Key)))
	return NtStatus(r0)
}
