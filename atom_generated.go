// This file was autogenerated using mkcode -- atom.go
// DO NOT EDIT.

package ntdll

import "unsafe"

type AtomInformationClass uint32

const (
	AtomBasicInformation AtomInformationClass = 0
	AtomTableInformation                      = 1
)

var (
	procNtAddAtom              = modntdll.NewProc("NtAddAtom")
	procNtDeleteAtom           = modntdll.NewProc("NtDeleteAtom")
	procNtFindAtom             = modntdll.NewProc("NtFindAtom")
	procNtQueryInformationAtom = modntdll.NewProc("NtQueryInformationAtom")
)

type AtomBasicInformationT struct {
	UsageCount uint16
	Flags      uint16
	NameLength uint16
	Name       [1]uint16
}

type AtomTableInformationT struct {
	NumberOfAtoms uint32
	Atoms         [1]RtlAtom
}

func NtAddAtom(AtomName *uint16, Length uint32, Atom *RtlAtom) NtStatus {
	r0, _, _ := procNtAddAtom.Call(uintptr(unsafe.Pointer(AtomName)), uintptr(Length), uintptr(unsafe.Pointer(Atom)))
	return NtStatus(r0)
}

func NtDeleteAtom(Atom RtlAtom) NtStatus {
	r0, _, _ := procNtDeleteAtom.Call(uintptr(Atom))
	return NtStatus(r0)
}

func NtFindAtom(AtomName *uint16, Length uint32, OPTIONAL *RtlAtom) NtStatus {
	r0, _, _ := procNtFindAtom.Call(uintptr(unsafe.Pointer(AtomName)), uintptr(Length), uintptr(unsafe.Pointer(OPTIONAL)))
	return NtStatus(r0)
}

func NtQueryInformationAtom(Atom RtlAtom, AtomInformationClass AtomInformationClass, AtomInformation *byte, AtomInformationLength uint32, ReturnLength *uint32) NtStatus {
	r0, _, _ := procNtQueryInformationAtom.Call(uintptr(Atom), uintptr(AtomInformationClass), uintptr(unsafe.Pointer(AtomInformation)), uintptr(AtomInformationLength), uintptr(unsafe.Pointer(ReturnLength)))
	return NtStatus(r0)
}
